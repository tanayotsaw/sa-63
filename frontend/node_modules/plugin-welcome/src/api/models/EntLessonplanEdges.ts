/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntSection,
    EntSectionFromJSON,
    EntSectionFromJSONTyped,
    EntSectionToJSON,
    EntSubject,
    EntSubjectFromJSON,
    EntSubjectFromJSONTyped,
    EntSubjectToJSON,
    EntTeacher,
    EntTeacherFromJSON,
    EntTeacherFromJSONTyped,
    EntTeacherToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntLessonplanEdges
 */
export interface EntLessonplanEdges {
    /**
     * 
     * @type {EntSubject}
     * @memberof EntLessonplanEdges
     */
    courseID?: EntSubject;
    /**
     * 
     * @type {EntSection}
     * @memberof EntLessonplanEdges
     */
    groupID?: EntSection;
    /**
     * 
     * @type {EntTeacher}
     * @memberof EntLessonplanEdges
     */
    professorID?: EntTeacher;
}

export function EntLessonplanEdgesFromJSON(json: any): EntLessonplanEdges {
    return EntLessonplanEdgesFromJSONTyped(json, false);
}

export function EntLessonplanEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntLessonplanEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'courseID': !exists(json, 'CourseID') ? undefined : EntSubjectFromJSON(json['CourseID']),
        'groupID': !exists(json, 'GroupID') ? undefined : EntSectionFromJSON(json['GroupID']),
        'professorID': !exists(json, 'ProfessorID') ? undefined : EntTeacherFromJSON(json['ProfessorID']),
    };
}

export function EntLessonplanEdgesToJSON(value?: EntLessonplanEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'courseID': EntSubjectToJSON(value.courseID),
        'groupID': EntSectionToJSON(value.groupID),
        'professorID': EntTeacherToJSON(value.professorID),
    };
}


