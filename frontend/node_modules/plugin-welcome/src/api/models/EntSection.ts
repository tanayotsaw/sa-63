/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntSectionEdges,
    EntSectionEdgesFromJSON,
    EntSectionEdgesFromJSONTyped,
    EntSectionEdgesToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntSection
 */
export interface EntSection {
    /**
     * DateTime holds the value of the "Date_Time" field.
     * @type {string}
     * @memberof EntSection
     */
    dateTime?: string;
    /**
     * Group holds the value of the "Group" field.
     * @type {number}
     * @memberof EntSection
     */
    group?: number;
    /**
     * Room holds the value of the "Room" field.
     * @type {string}
     * @memberof EntSection
     */
    room?: string;
    /**
     * SeatLeft holds the value of the "Seat_left" field.
     * @type {number}
     * @memberof EntSection
     */
    seatLeft?: number;
    /**
     * 
     * @type {EntSectionEdges}
     * @memberof EntSection
     */
    edges?: EntSectionEdges;
    /**
     * ID of the ent.
     * @type {number}
     * @memberof EntSection
     */
    id?: number;
    /**
     * Recieve holds the value of the "recieve" field.
     * @type {number}
     * @memberof EntSection
     */
    recieve?: number;
}

export function EntSectionFromJSON(json: any): EntSection {
    return EntSectionFromJSONTyped(json, false);
}

export function EntSectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntSection {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dateTime': !exists(json, 'Date_Time') ? undefined : json['Date_Time'],
        'group': !exists(json, 'Group') ? undefined : json['Group'],
        'room': !exists(json, 'Room') ? undefined : json['Room'],
        'seatLeft': !exists(json, 'Seat_left') ? undefined : json['Seat_left'],
        'edges': !exists(json, 'edges') ? undefined : EntSectionEdgesFromJSON(json['edges']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'recieve': !exists(json, 'recieve') ? undefined : json['recieve'],
    };
}

export function EntSectionToJSON(value?: EntSection | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Date_Time': value.dateTime,
        'Group': value.group,
        'Room': value.room,
        'Seat_left': value.seatLeft,
        'edges': EntSectionEdgesToJSON(value.edges),
        'id': value.id,
        'recieve': value.recieve,
    };
}


