// Code generated by entc, DO NOT EDIT.

package subject

const (
	// Label holds the string label denoting the subject type in the database.
	Label = "subject"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSubjectName holds the string denoting the subject_name field in the database.
	FieldSubjectName = "subject_name"
	// FieldCredit holds the string denoting the credit field in the database.
	FieldCredit = "credit"
	// FieldPrice holds the string denoting the price field in the database.
	FieldPrice = "price"

	// EdgeProfessorID holds the string denoting the professor_id edge name in mutations.
	EdgeProfessorID = "Professor_ID"
	// EdgeSubjectID holds the string denoting the subject_id edge name in mutations.
	EdgeSubjectID = "Subject_ID"

	// Table holds the table name of the subject in the database.
	Table = "subjects"
	// ProfessorIDTable is the table the holds the Professor_ID relation/edge.
	ProfessorIDTable = "subjects"
	// ProfessorIDInverseTable is the table name for the Teacher entity.
	// It exists in this package in order to avoid circular dependency with the "teacher" package.
	ProfessorIDInverseTable = "teachers"
	// ProfessorIDColumn is the table column denoting the Professor_ID relation/edge.
	ProfessorIDColumn = "teacher_teacher_id"
	// SubjectIDTable is the table the holds the Subject_ID relation/edge.
	SubjectIDTable = "lessonplans"
	// SubjectIDInverseTable is the table name for the Lessonplan entity.
	// It exists in this package in order to avoid circular dependency with the "lessonplan" package.
	SubjectIDInverseTable = "lessonplans"
	// SubjectIDColumn is the table column denoting the Subject_ID relation/edge.
	SubjectIDColumn = "subject_subject_id"
)

// Columns holds all SQL columns for subject fields.
var Columns = []string{
	FieldID,
	FieldSubjectName,
	FieldCredit,
	FieldPrice,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Subject type.
var ForeignKeys = []string{
	"teacher_teacher_id",
}

var (
	// CreditValidator is a validator for the "Credit" field. It is called by the builders before save.
	CreditValidator func(int) error
	// PriceValidator is a validator for the "Price" field. It is called by the builders before save.
	PriceValidator func(float64) error
)
