basePath: /api/v1
definitions:
  ent.Lessonplan:
    properties:
      Room:
        description: Room holds the value of the "Room" field.
        type: string
      edges:
        $ref: '#/definitions/ent.LessonplanEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the LessonplanQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.LessonplanEdges:
    properties:
      courseID:
        $ref: '#/definitions/ent.Subject'
        description: CourseID holds the value of the Course_ID edge.
        type: object
      groupID:
        $ref: '#/definitions/ent.Section'
        description: GroupID holds the value of the Group_id edge.
        type: object
      professorID:
        $ref: '#/definitions/ent.Teacher'
        description: ProfessorID holds the value of the Professor_ID edge.
        type: object
    type: object
  ent.Section:
    properties:
      Date_Time:
        description: DateTime holds the value of the "Date_Time" field.
        type: string
      Group:
        description: Group holds the value of the "Group" field.
        type: integer
      Room:
        description: Room holds the value of the "Room" field.
        type: string
      Seat_left:
        description: SeatLeft holds the value of the "Seat_left" field.
        type: integer
      edges:
        $ref: '#/definitions/ent.SectionEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the SectionQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      recieve:
        description: Recieve holds the value of the "recieve" field.
        type: integer
    type: object
  ent.SectionEdges:
    properties:
      secID:
        description: SecID holds the value of the sec_id edge.
        items:
          $ref: '#/definitions/ent.Lessonplan'
        type: array
    type: object
  ent.Subject:
    properties:
      Credit:
        description: Credit holds the value of the "Credit" field.
        type: integer
      Price:
        description: Price holds the value of the "Price" field.
        type: number
      Subject_Name:
        description: SubjectName holds the value of the "Subject_Name" field.
        type: string
      edges:
        $ref: '#/definitions/ent.SubjectEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the SubjectQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.SubjectEdges:
    properties:
      professorID:
        $ref: '#/definitions/ent.Teacher'
        description: ProfessorID holds the value of the Professor_ID edge.
        type: object
      subjectID:
        description: SubjectID holds the value of the Subject_ID edge.
        items:
          $ref: '#/definitions/ent.Lessonplan'
        type: array
    type: object
  ent.Teacher:
    properties:
      Teacher_Name:
        description: TeacherName holds the value of the "Teacher_Name" field.
        type: string
      edges:
        $ref: '#/definitions/ent.TeacherEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the TeacherQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.TeacherEdges:
    properties:
      teacherID:
        description: TeacherID holds the value of the Teacher_ID edge.
        items:
          $ref: '#/definitions/ent.Subject'
        type: array
      teachersID:
        description: TeachersID holds the value of the Teachers_ID edge.
        items:
          $ref: '#/definitions/ent.Lessonplan'
        type: array
    type: object
  ent.User:
    properties:
      Password:
        description: Password holds the value of the "Password" field.
        type: string
      User_Email:
        description: UserEmail holds the value of the "User_Email" field.
        type: string
      edges:
        $ref: '#/definitions/ent.UserEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the UserQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.UserEdges:
    properties:
      userID:
        description: UserID holds the value of the User_ID edge.
        items:
          $ref: '#/definitions/ent.Teacher'
        type: array
    type: object
  gin.H:
    additionalProperties: true
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for SUT SE 2563
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SUT SA Example API
  version: "1.0"
paths:
  /Sections:
    get:
      description: list section entities
      operationId: list-section
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Section'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List section entities
  /lessonplans:
    get:
      description: list lessonplan entities
      operationId: list-lessonplan
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Lessonplan'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List lessonplan entities
    post:
      consumes:
      - application/json
      description: Create lessonplan
      operationId: create-lessonplan
      parameters:
      - description: Lessonplan entity
        in: body
        name: lessonplan
        required: true
        schema:
          $ref: '#/definitions/ent.Lessonplan'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Lessonplan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create lessonplan
  /lessonplans/{id}:
    delete:
      description: get lessonplan by ID
      operationId: delete-lessonplan
      parameters:
      - description: Lessonplan ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a lessonplan entity by ID
    get:
      description: get lessonplan by ID
      operationId: get-lessonplan
      parameters:
      - description: Lessonplan ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Lessonplan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a lessonplan entity by ID
    put:
      consumes:
      - application/json
      description: update lessonplan by ID
      operationId: update-lessonplan
      parameters:
      - description: Lessonplan ID
        in: path
        name: id
        required: true
        type: integer
      - description: Lessonplan entity
        in: body
        name: lessonplan
        required: true
        schema:
          $ref: '#/definitions/ent.Lessonplan'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Lessonplan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a lessonplan entity by ID
  /sections:
    post:
      consumes:
      - application/json
      description: Create section
      operationId: create-section
      parameters:
      - description: Section entity
        in: body
        name: section
        required: true
        schema:
          $ref: '#/definitions/ent.Section'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Section'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create section
  /sections/{id}:
    delete:
      description: get section by ID
      operationId: delete-section
      parameters:
      - description: Section ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a section entity by ID
    get:
      description: get section by ID
      operationId: get-section
      parameters:
      - description: Section ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Section'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a section entity by ID
    put:
      consumes:
      - application/json
      description: update section by ID
      operationId: update-section
      parameters:
      - description: Section ID
        in: path
        name: id
        required: true
        type: integer
      - description: Section entity
        in: body
        name: section
        required: true
        schema:
          $ref: '#/definitions/ent.Section'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Section'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a section entity by ID
  /subjects:
    get:
      description: list subject entities
      operationId: list-subject
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Subject'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List subject entities
    post:
      consumes:
      - application/json
      description: Create subject
      operationId: create-subject
      parameters:
      - description: Subject entity
        in: body
        name: subject
        required: true
        schema:
          $ref: '#/definitions/ent.Subject'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Subject'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create subject
  /subjects/{id}:
    delete:
      description: get subject by ID
      operationId: delete-subject
      parameters:
      - description: subject ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a subject entity by ID
    get:
      description: get subject by ID
      operationId: get-subject
      parameters:
      - description: Subject ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Subject'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a subject entity by ID
    put:
      consumes:
      - application/json
      description: update subject by ID
      operationId: update-subject
      parameters:
      - description: Subject ID
        in: path
        name: id
        required: true
        type: integer
      - description: Subject entity
        in: body
        name: subject
        required: true
        schema:
          $ref: '#/definitions/ent.Subject'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Subject'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a subject entity by ID
  /teachers:
    get:
      description: list teacher entities
      operationId: list-teacher
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Teacher'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List teacher entities
    post:
      consumes:
      - application/json
      description: Create teacher
      operationId: create-teacher
      parameters:
      - description: Teacher entity
        in: body
        name: teacher
        required: true
        schema:
          $ref: '#/definitions/ent.Teacher'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Teacher'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create teacher
  /teachers/{id}:
    delete:
      description: get teacher by ID
      operationId: delete-teacher
      parameters:
      - description: Teacher ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a teacher entity by ID
    get:
      description: get teacher by ID
      operationId: get-teacher
      parameters:
      - description: Teacher ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Teacher'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a teacher entity by ID
    put:
      consumes:
      - application/json
      description: update teacher by ID
      operationId: update-teacher
      parameters:
      - description: Teacher ID
        in: path
        name: id
        required: true
        type: integer
      - description: Teacher entity
        in: body
        name: teacher
        required: true
        schema:
          $ref: '#/definitions/ent.Teacher'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Teacher'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a teacher entity by ID
  /users:
    get:
      description: list user entities
      operationId: list-user
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List user entities
    post:
      consumes:
      - application/json
      description: Create user
      operationId: create-user
      parameters:
      - description: User entity
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/ent.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create user
  /users/{id}:
    delete:
      description: get user by ID
      operationId: delete-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a user entity by ID
    get:
      description: get user by ID
      operationId: get-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a user entity by ID
    put:
      consumes:
      - application/json
      description: update user by ID
      operationId: update-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User entity
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/ent.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a user entity by ID
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
